/**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**/
1.
class Employee:

private Set<Client> clients;

@ManyToMany
@JoinTable(
            name = "employees_clients",
            joinColumns = @JoinColumn(name = "employee_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "clients_id", referencedColumnName = "id")
    )
    public Set<Client> getClients() {
        return this.clients;
    }
	
class Client:

private Set<Employee> employees;

@ManyToMany(mappedBy = "clients")
    public Set<Employee> getEmployees() {
        return this.employees;
    }

1.1 Пак става ако махнем(единствено можем да сложим къстъм имена ако го има):
@JoinTable(
            name = "employees_clients",
            joinColumns = @JoinColumn(name = "employee_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "clients_id", referencedColumnName = "id")
    )

/**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**/
2.
2.1. 
Ако сложим анотации само @ManyToMany без mappedBy в двата класа, ще направи 2 мапинг таблици с разменени редове на имената и полетата;
clients_employees; employees_clients;

2.2 
Ако махнем mappedBy и сложим от двете страни @JoinTable и са с еднаки имена, ще направи само 1 таблица, ако са с различни имена ще направи 2 таблици;

/**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**/
3. 
 Ако сложим и в двата класа mappedBy ГЪРМИ!!!
/**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**/

	
	
	
	
	